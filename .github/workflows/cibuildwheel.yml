name: cibuildwheel

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci_skip')"
    strategy:
      fail-fast: false
      matrix:
        build: [
          linux-x86_64,
          linux-aarch64,
          linux-ppc64le,
          linux-s390x,
        ]
        include:
          - build: linux-x86_64
            os: ubuntu-18.04
            arch: x86_64
            macos_target: ''
          - build: linux-aarch64
            os: ubuntu-18.04
            arch: aarch64
            macos_target: ''
          - build: linux-ppc64le
            os: ubuntu-18.04
            arch: ppc64le
            macos_target: ''
          - build: linux-s390x
            os: ubuntu-18.04
            arch: s390x
            macos_target: ''

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive


      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0

        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BUILD: cp36-manylinux* cp37-manylinux* cp38-manylinux* cp39-manylinux*
          CIBW_SKIP: "*-win32 *-manylinux_i686 pp*"
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest
          CIBW_MANYLINUX_PPC64LE_IMAGE: quay.io/pypa/manylinux2014_ppc64le:latest
          CIBW_MANYLINUX_S390X_IMAGE: quay.io/pypa/manylinux2014_s390x:latest
          CIBW_MANYLINUX_AARCH64_IMAGE: quay.io/pypa/manylinux2014_aarch64:latest
          CIBW_ENVIRONMENT_MACOS: ${{ matrix.macos_target }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_BEFORE_ALL: |
            yum install bzip2 -y
            pip install --upgrade pip
            pip install cmake
            yum install zlib-devel -y
            yum install centos-release-scl-rh -y
            yum install doxygen -y
            yum install devtoolset-7-toolchain -y
            yum groupinstall -y "development tools"
            yum install boost-devel -y
            yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel expat-devel
            cmake -BkSpider_BUILD_DIR
            cmake --build kSpider_BUILD_DIR -j4


      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  upload_pypi_release:
    needs: build_wheels
    runs-on: ubuntu-18.04
    if: "contains(github.event.head_commit.message, 'publish_pypi')"
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        id: fetch_artifacts
        with:
          path: 'wheels/'

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_KSPIDER2_API_KEY }}
          packages_dir: ${{steps.fetch_artifacts.outputs.download-path}}/artifact/
          skip_existing: true
          verbose: true
